name: Build Verium (Windows x86_64 via Ubuntu)

on:
  workflow_dispatch:
#  pull_request:
#  push:

permissions:
  contents: write

concurrency:
  group: verium-ci-${{ github.ref }}   
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  HOST_TRIPLET: x86_64-w64-mingw32

jobs:
  win64:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Base deps + MinGW
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential automake libtool pkg-config python3 \
            g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 \
            curl zip unzip ccache

      # Optional: preseed source tarballs (uncomment if you host them)
      # - name: Preseed depends sources
      #   run: |
      #     mkdir -p depends/sources
      #     gh release download deps-sources-v1 --pattern 'depends-sources-*.zip' --dir .
      #     unzip -o depends-sources-*.zip -d depends/sources
      #   env: { GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} }

      - name: Cache depends
        uses: actions/cache@v4
        with:
          path: |
            depends/sources
            depends/built
          key: win-${{ env.HOST_TRIPLET }}-${{ hashFiles('depends/packages/*.mk') }}
          restore-keys: win-${{ env.HOST_TRIPLET }}-

      # Patch curl for cross-compile (avoid AC_RUN_IFELSE)
      - name: Patch curl.mk for MinGW
        run: |
          set -e
          f=depends/packages/curl.mk
          [ -f "$f" ] || exit 0
          perl -0777 -pe '
            s/(\$\(package\)_set_vars\s*\n)/$1# mingw cross-friendly opts\n$$(package)_config_opts += --disable-debug --disable-curldebug --disable-ldap --disable-ldaps --without-libidn2 --without-libpsl --without-brotli --without-zstd --without-nghttp2 --without-ssh --without-libssh2 --without-rtmp\n$$(package)_config_opts_mingw32 += --with-winssl\n$$(package)_config_opts_mingw64 += --with-winssl\n$$(package)_conf_env += ac_cv_func_strerror_r=no ac_cv_strerror_r_char_p=no ac_cv_func_clock_gettime=no\n/ or die $_' -i "$f" || true

      - name: Build depends (Win64)
        run: |
          set -e
          make -C depends HOST=${HOST_TRIPLET} -j"$(nproc || echo 2)" || {
            echo "---- tail curl config.log ----"
            find depends/work/build -path "*/curl/*/config.log" -exec sh -c 'echo "==> {}"; tail -n 200 "{}"' \;
            echo "---- tail any config.log ----"
            find depends/work/build -name config.log -exec sh -c 'echo "==> {}"; tail -n 100 "{}"' \;
            exit 1
          }

      - name: Configure (Win64)
        run: |
          ./autogen.sh
          export CONFIG_SITE="$(pwd)/depends/${HOST_TRIPLET}/share/config.site"
          set -o pipefail
          ./configure \
            --host=${HOST_TRIPLET} \
            --prefix="$(pwd)/depends/${HOST_TRIPLET}" \
            --disable-bench --disable-tests \
            --enable-reduce-exports \
            --disable-shared --enable-static \
          || { echo "=== config.log (tail) ==="; tail -n 200 config.log || true; exit 1; }

      - name: Build (Win64)
        run: make -j"$(nproc || echo 2)" V=1

      - name: Package + checksums
        run: |
          set -euo pipefail
          V="${{ github.ref_type == 'tag' && github.ref_name || '' }}"
          if [ -z "$V" ]; then V=$(git describe --tags --dirty --always || echo untagged); fi
          PKG="verium-${V}-${HOST_TRIPLET}.zip"
          mkdir -p out
          cp -f src/*.exe out/ 2>/dev/null || true
          cp -f src/qt/*.exe out/ 2>/dev/null || true
          [ -n "$(ls -A out)" ] || { echo "No Windows EXEs in out/"; exit 2; }
          (cd out && zip -r "../$PKG" .)
          sha256sum "$PKG" > "${PKG}.SHA256SUMS"
          echo "ART_MAIN=$PKG" >> $GITHUB_ENV
          echo "ART_SUMS=${PKG}.SHA256SUMS" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v4
        with:
          name: win64-${{ env.HOST_TRIPLET }}
          path: |
            ${{ env.ART_MAIN }}
            ${{ env.ART_SUMS }}
