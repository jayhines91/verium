name: Build Verium (Windows x86_64 • old-style)

on:
  workflow_dispatch:
    inputs:
      
      depends_target:
        description: "Optional: build only this depends pkg first (e.g., curl, openssl). Leave empty for full depends."
        required: false
        default: ""
      verbose_make:
        description: "Verbose make output (V=1)"
        required: false
        default: "false"

concurrency:
  group: verium-global
  cancel-in-progress: true

permissions:
  contents: write

defaults:
  run:
    shell: bash

env:
  HOST_TRIPLET: x86_64-w64-mingw32

jobs:
  win64:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout target ref
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target_ref }}
          submodules: recursive
          fetch-depth: 0

      - name: Base deps + MinGW toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential automake libtool pkg-config python3 \
            g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 \
            curl zip unzip ccache

      - name: Cache depends (sources + built)
        uses: actions/cache@v4
        with:
          path: |
            depends/sources
            depends/built
          key: win-${{ env.HOST_TRIPLET }}-${{ hashFiles('depends/packages/*.mk') }}
          restore-keys: |
            win-${{ env.HOST_TRIPLET }}-

      # Prevent cURL configure from trying to run tests (classic cross-compile failure)
      - name: Patch curl.mk for MinGW (avoid AC_RUN; prefer WinSSL)
        run: |
          set -e
          f=depends/packages/curl.mk
          if [ -f "$f" ]; then
            perl -0777 -pe '
              s/(\$\(package\)_set_vars\s*\n)/$1# mingw cross-friendly opts\n$$(package)_config_opts += --disable-debug --disable-curldebug --disable-ldap --disable-ldaps --without-libidn2 --without-libpsl --without-brotli --without-zstd --without-nghttp2 --without-ssh --without-libssh2 --without-rtmp\n$$(package)_config_opts_mingw32 += --with-winssl\n$$(package)_config_opts_mingw64 += --with-winssl\n$$(package)_conf_env += ac_cv_func_strerror_r=no ac_cv_strerror_r_char_p=no ac_cv_func_clock_gettime=no\n/ or die $_' -i "$f" || true
          fi

      - name: Patch Qt 5.9.8 for modern GCC (add <limits>)
        run: |
          set -e
          # 1) Create the patch file
          mkdir -p depends/patches/qt
          cat > depends/patches/qt/0001-qbytearraymatcher-include-limits.patch <<'PATCH'
          --- a/qtbase/src/corelib/tools/qbytearraymatcher.h
          +++ b/qtbase/src/corelib/tools/qbytearraymatcher.h
          @@ -40,6 +40,7 @@
           #include <QtCore/qbytearray.h>
           #include <QtCore/qstring.h>
           #include <QtCore/qvarlengtharray.h>
          +#include <limits>
     
         QT_BEGIN_NAMESPACE
        PATCH

        # 2) Register the patch so depends applies it during preprocess
        f=depends/packages/qt.mk
        if [ -f "$f" ] && ! grep -q '0001-qbytearraymatcher-include-limits.patch' "$f"; then
          printf '\n$$(package)_patches += 0001-qbytearraymatcher-include-limits.patch\n' >> "$f"
        fi

        # 3) Ensure we don’t reuse a previously preprocessed Qt tree
        rm -rf depends/work/build/*/qt/

      - name: Build depends (Win64)
        run: |
          set -e
          # Make sure OpenSSL (and friends) find the prefixed resource compiler
          export RC=${HOST_TRIPLET}-windres
          export WINDRES=${HOST_TRIPLET}-windres

          # Optionally build one package first to iterate faster (e.g., curl)
          if [ -n "${{ inputs.depends_target }}" ]; then
            echo "Priming depends target: ${{ inputs.depends_target }}"
            make -C depends HOST=${HOST_TRIPLET} ${{ inputs.depends_target }} -j"$(nproc || echo 2)" RC="$RC" WINDRES="$WINDRES"
          fi

          # Full depends build
          make -C depends HOST=${HOST_TRIPLET} -j"$(nproc || echo 2)" RC="$RC" WINDRES="$WINDRES" || {
            echo "---- tail curl config.log ----"
            find depends/work/build -path "*/curl/*/config.log" -exec sh -c 'echo "==> {}"; tail -n 200 "{}"' \;
            echo "---- tail any config.log ----"
            find depends/work/build -name config.log -exec sh -c 'echo "==> {}"; tail -n 120 "{}"' \;
            exit 1
          }

      - name: Configure (Win64)
        run: |
          ./autogen.sh
          export CONFIG_SITE="$(pwd)/depends/${HOST_TRIPLET}/share/config.site"
          set -o pipefail
          ./configure \
            --host=${HOST_TRIPLET} \
            --prefix="$(pwd)/depends/${HOST_TRIPLET}" \
            --disable-bench --disable-tests \
            --enable-reduce-exports \
            --disable-shared --enable-static \
          || { echo "=== config.log (tail) ==="; tail -n 200 config.log || true; exit 1; }

      - name: Build (Win64)
        run: |
          if [ "${{ inputs.verbose_make }}" = "true" ]; then
            make -j"$(nproc || echo 2)" V=1
          else
            make -j"$(nproc || echo 2)"
          fi

      - name: Package + checksums (Win64)
        run: |
          set -euo pipefail
          V=$(git describe --tags --dirty --always || echo untagged)
          PKG="verium-${V}-${HOST_TRIPLET}.zip"
          mkdir -p out
          cp -f src/*.exe out/ 2>/dev/null || true
          cp -f src/qt/*.exe out/ 2>/dev/null || true
          [ -n "$(ls -A out)" ] || { echo "No Windows EXEs in out/"; exit 2; }
          (cd out && zip -r "../$PKG" .)
          sha256sum "$PKG" > "${PKG}.SHA256SUMS"
          echo "ART_MAIN=$PKG" >> $GITHUB_ENV
          echo "ART_SUMS=${PKG}.SHA256SUMS" >> $GITHUB_ENV

      - name: Upload artifacts (binaries + checksums)
        uses: actions/upload-artifact@v4
        with:
          name: win64-${{ env.HOST_TRIPLET }}
          path: |
            ${{ env.ART_MAIN }}
            ${{ env.ART_SUMS }}

      - name: Upload build logs (for debugging)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: win64-dep-logs
          path: |
            depends/work/build/**/config.log
            depends/work/build/**/config.status
          if-no-files-found: ignore
